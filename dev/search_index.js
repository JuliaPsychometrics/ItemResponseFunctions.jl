var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"CurrentModule = ItemResponseFunctions","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Types","page":"API","title":"Types","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"OneParameterLogisticModel\nTwoParameterLogisticModel\nThreeParameterLogisticModel\nFourParameterLogisticModel","category":"page"},{"location":"api/#ItemResponseFunctions.OneParameterLogisticModel","page":"API","title":"ItemResponseFunctions.OneParameterLogisticModel","text":"abstract type OneParameterLogisticModel <: DichotomousItemResponseModel\n\nAn abstract representation of a 1 Parameter Logistic Model with an item response function given by\n\nP(Y_ij=1theta_iboldsymbolbeta_j) = mathrmlogistic(theta_i - b_j)\n\nThe item parameter beta can be passed as a number or a destructurable object with the following fields:\n\nb: the item difficulty (location)\n\nAlias: OnePL\n\n\n\n\n\n","category":"type"},{"location":"api/#ItemResponseFunctions.TwoParameterLogisticModel","page":"API","title":"ItemResponseFunctions.TwoParameterLogisticModel","text":"abstract type TwoParameterLogisticModel <: DichotomousItemResponseModel\n\nAn abstract representation of a 2 Parameter Logistic Model with an item response function given by\n\nP(Y_ij=1theta_iboldsymbolbeta_j) = mathrmlogistic(a_j(theta_i - b_j))\n\nThe item parameters beta must be a destructurable object with the following fields:\n\na: the item discrimination\nb: the item difficulty (location)\n\nAlias: TwoPL\n\n\n\n\n\n","category":"type"},{"location":"api/#ItemResponseFunctions.ThreeParameterLogisticModel","page":"API","title":"ItemResponseFunctions.ThreeParameterLogisticModel","text":"abstract type ThreeParameterLogisticModel <: DichotomousItemResponseModel\n\nAn abstract representation of a 3 Parameter Logistic Model with an item response function given by\n\nP(Y_ij=1theta_iboldsymbolbeta_j) = c_j + (1 - c_j)cdotmathrmlogistic(a_j(theta_i - b_j))\n\nThe item parameters beta must be a destructurable object with the following fields:\n\na: the item discrimination\nb: the item difficulty (location)\nc: the lower asymptote\n\nAlias: ThreePL\n\n\n\n\n\n","category":"type"},{"location":"api/#ItemResponseFunctions.FourParameterLogisticModel","page":"API","title":"ItemResponseFunctions.FourParameterLogisticModel","text":"abstract type FourParameterLogisticModel <: DichotomousItemResponseModel\n\nAn abstract representation of a 4 Parameter Logistic Model with an item response function given by\n\nP(Y_ij=1theta_iboldsymbolbeta_j) = c_j + (d_j - c_j)cdotmathrmlogistic(a_j(theta_i - b_j))\n\nThe item parameters beta must be a destructurable object with the following fields:\n\na: the item discrimination\nb: the item difficulty (location)\nc: the lower asymptote\nd: the upper asymptote\n\nAlias: FourPL\n\n\n\n\n\n","category":"type"},{"location":"api/#Functions","page":"API","title":"Functions","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"irf\niif\nexpected_score\ninformation","category":"page"},{"location":"api/#AbstractItemResponseModels.irf","page":"API","title":"AbstractItemResponseModels.irf","text":"irf(M, theta, beta)\nirf(M, theta, beta, y)\n\n\nEvaluate the item response function of an item response model M for response y at the ability value theta given item parameters beta.\n\nModels with dichotomous responses\n\nIf response_type(M) == Dichotomous, then the item response function is evaluated for a correct response (y = 1) by default.\n\nExamples\n\n1 Parameter Logistic Model\n\njulia> irf(OnePL, 0.0, 0.0)\n0.5\n\njulia> irf(OnePL, 0.0, (; b = 0.5))\n0.37754066879814546\n\n2 Parameter Logistic Model\n\njulia> beta = (; a = 1.5, b = 0.5);\n\njulia> irf(TwoPL, 0.0, beta)\n0.32082130082460697\n\n3 Parameter Logistic Model\n\njulia> beta = (; a = 1.5, b = 0.5, c = 0.2);\n\njulia> irf(ThreePL, 0.0, beta)\n0.4566570406596856\n\n4 Parameter Logistic Model\n\njulia> beta = (; a = 1.5, b = 0.5, c = 0.2, d = 0.8);\n\njulia> irf(FourPL, 0.0, beta)\n0.3924927804947642\n\n\n\n\n\n","category":"function"},{"location":"api/#AbstractItemResponseModels.iif","page":"API","title":"AbstractItemResponseModels.iif","text":"iif(M, theta, beta)\niif(M, theta, beta, y)\n\n\nEvaluate the item information function of an item response model M for response y at the ability value theta given item parameters beta.\n\nExamples\n\n1 Parameter Logistic Model\n\njulia> iif(OnePL, 0.0, 0.0)\n0.25\n\njulia> iif(OnePL, 0.0, (; b = 0.0))\n0.25\n\n2 Parameter Logistic Model\n\njulia> iif(TwoPL, 0.0, (a = 1.3, b = 0.2))\n0.4154394331315018\n\n3 Parameter Logistic Model\n\njulia> iif(ThreePL, 0.0, (a = 1.5, b = 0.5, c = 0.15))\n0.3162871805861735\n\n\n4 Parameter Logistic Model\n\njulia> iif(FourPL, 0.0, (a = 2.1, b = -1.5, c = 0.15, d = 0.9))\n0.033871578233130605\n\n\n\n\n\n","category":"function"},{"location":"api/#AbstractItemResponseModels.expected_score","page":"API","title":"AbstractItemResponseModels.expected_score","text":"expected_score(M, theta, betas; scoring_function)\n\n\nCalculate the expected score of an item response model M at the ability value theta given a vector of item parameters betas. The values of betas are considered item parameters for different items.\n\nExpected scores are calculated from the models irf function. For details on how to pass item parameters to irf, see the respective function documentation.\n\nResponse scoring\n\nThe expected score is defined as the expected value of an observed response pattern x. Thus, the expected value for an arbitrary function f(x) can also be defined. We call the function f the scoring_function that maps responses to arbitrary values.\n\nExamples\n\n1 Parameter Logistic Model\n\njulia> betas = fill(0.0, 10);\n\njulia> expected_score(OnePL, 0.0, betas)\n5.0\n\njulia> expected_score(OnePL, 0.0, betas; scoring_function = x -> 2x)\n10.0\n\n2 Parameter Logistic Model\n\njulia> betas = fill((a = 1.5, b = 0.0), 5);\n\njulia> expected_score(TwoPL, 0.0, betas)\n2.5\n\njulia> expected_score(TwoPL, 0.0, betas; scoring_function = x -> x + 1)\n7.5\n\n3 Parameter Logistic Model\n\njulia> betas = fill((a = 0.4, b = 0.5, c = 0.1), 6);\n\njulia> expected_score(ThreePL, 0.0, betas)\n3.030896414512619\n\n4 Parameter Logistic Model\n\njulia> betas = fill((a = 1.4, b = 1.0, c = 0.15, d = 0.9), 7);\n\njulia> expected_score(FourPL, 0.0, betas)\n2.0885345850674453\n\n\n\n\n\n","category":"function"},{"location":"api/#AbstractItemResponseModels.information","page":"API","title":"AbstractItemResponseModels.information","text":"information(M, theta, betas)\n\n\nCalculate the test information of an item response mode M at the ability value theta given a vector of item parameters betas. The values of betas are considered item parameters for different items.\n\nThe test information is calculated from the models iif function. For details on how to pass item parameters to iif, see the respective function documentation.\n\nExamples\n\n1 Parameter Logistic Model\n\njulia> information(OnePL, 0.0, zeros(6))\n1.5\n\njulia> betas = fill((; b = 0.0), 6);\n\njulia> information(OnePL, 0.0, betas)\n1.5\n\n2 Parameter Logistic Model\n\njulia> betas = fill((; a = 1.2, b = 0.4), 4);\n\njulia> information(TwoPL, 0.0, betas)\n1.3601401228069934\n\n3 Parameter Logistic Model\n\njulia> betas = fill((; a = 1.5, b = 0.5, c = 0.2), 4);\n\njulia> information(ThreePL, 0.0, betas)\n1.102180659985265\n\n4 Parameter Logistic Model\n\njulia> betas = fill((; a = 0.5, b = 1.4, c = 0.13, d = 0.94), 6);\n\njulia> information(FourPL, 0.0, betas)\n0.20178122985757524\n\n\n\n\n\n","category":"function"},{"location":"#ItemResponseFunctions.jl","page":"Home","title":"ItemResponseFunctions.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev) (Image: Build Status) (Image: Coverage)","category":"page"},{"location":"","page":"Home","title":"Home","text":"ItemResponseFunctions.jl implements basic functions for Item Response Theory models. It is built based on the interface designed in AbstractItemResponseModels.jl.","category":"page"}]
}
